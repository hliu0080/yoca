<?php

/**
 * EventNotifyTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EventNotifyTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object EventNotifyTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('EventNotify');
    }
    
    public function isSignedUp($eventId, $menteeId, $status){
    	$notify = $this->createQuery('n')
    	->select('count(n.id)')
    	->where('n.event_id = ? and n.mentee_id = ?', array($eventId, $menteeId))
    	->setHydrationMode(Doctrine::HYDRATE_SINGLE_SCALAR)
    	->execute();
    	
    	return $notify>0? true:false;
    }
    
    public function getNotify($eventId, $status){
    	return $this->createQuery('n')
    	->where('n.event_id = ? and n.status = ?', array($eventId, $status))
    	->execute();
    }
    
    /**
     * Send emails to singedup users and mark status as 'notified'
     */
    public function notify($eventId){
    	$mentees = $this->getNotify($eventId, 'signedup');
    	
    	$menteeUsernames = array();
    	foreach($mentees as $mentee){
    		$menteeUsernames[] = $mentee->getMenteeUsername();
    		$mentee->setStatus('notified');
    		$mentee->save();
    	}
    	
    	$mailer = sfContext::getInstance()->getMailer();
    	$body = "Event $eventId just becomes available again. Please register.";
    	$mailer->composeAndSend(sfConfig::get('app_mail_service'), $menteeUsernames, "Event $eventId is available now!", $body);
    }
}