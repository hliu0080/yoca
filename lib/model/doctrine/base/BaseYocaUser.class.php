<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('YocaUser', 'doctrine');

/**
 * BaseYocaUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $type
 * @property string $firstname
 * @property string $lastname
 * @property string $english_name
 * @property string $phone
 * @property string $wechat
 * @property string $education
 * @property string $school_id
 * @property string $school
 * @property string $major_id
 * @property string $major
 * @property string $work
 * @property string $employer
 * @property string $oh_preference
 * @property string $industry_id
 * @property string $industry
 * @property string $description
 * @property string $expectation_id
 * @property string $expectation
 * @property string $age
 * @property string $neighborhood
 * @property string $organization
 * @property string $is_active
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Doctrine_Collection $Registration
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getUsername()       Returns the current record's "username" value
 * @method string              getPassword()       Returns the current record's "password" value
 * @method string              getType()           Returns the current record's "type" value
 * @method string              getFirstname()      Returns the current record's "firstname" value
 * @method string              getLastname()       Returns the current record's "lastname" value
 * @method string              getEnglishName()    Returns the current record's "english_name" value
 * @method string              getPhone()          Returns the current record's "phone" value
 * @method string              getWechat()         Returns the current record's "wechat" value
 * @method string              getEducation()      Returns the current record's "education" value
 * @method string              getSchoolId()       Returns the current record's "school_id" value
 * @method string              getSchool()         Returns the current record's "school" value
 * @method string              getMajorId()        Returns the current record's "major_id" value
 * @method string              getMajor()          Returns the current record's "major" value
 * @method string              getWork()           Returns the current record's "work" value
 * @method string              getEmployer()       Returns the current record's "employer" value
 * @method string              getOhPreference()   Returns the current record's "oh_preference" value
 * @method string              getIndustryId()     Returns the current record's "industry_id" value
 * @method string              getIndustry()       Returns the current record's "industry" value
 * @method string              getDescription()    Returns the current record's "description" value
 * @method string              getExpectationId()  Returns the current record's "expectation_id" value
 * @method string              getExpectation()    Returns the current record's "expectation" value
 * @method string              getAge()            Returns the current record's "age" value
 * @method string              getNeighborhood()   Returns the current record's "neighborhood" value
 * @method string              getOrganization()   Returns the current record's "organization" value
 * @method string              getIsActive()       Returns the current record's "is_active" value
 * @method timestamp           getCreatedAt()      Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()      Returns the current record's "updated_at" value
 * @method Doctrine_Collection getRegistration()   Returns the current record's "Registration" collection
 * @method YocaUser            setId()             Sets the current record's "id" value
 * @method YocaUser            setUsername()       Sets the current record's "username" value
 * @method YocaUser            setPassword()       Sets the current record's "password" value
 * @method YocaUser            setType()           Sets the current record's "type" value
 * @method YocaUser            setFirstname()      Sets the current record's "firstname" value
 * @method YocaUser            setLastname()       Sets the current record's "lastname" value
 * @method YocaUser            setEnglishName()    Sets the current record's "english_name" value
 * @method YocaUser            setPhone()          Sets the current record's "phone" value
 * @method YocaUser            setWechat()         Sets the current record's "wechat" value
 * @method YocaUser            setEducation()      Sets the current record's "education" value
 * @method YocaUser            setSchoolId()       Sets the current record's "school_id" value
 * @method YocaUser            setSchool()         Sets the current record's "school" value
 * @method YocaUser            setMajorId()        Sets the current record's "major_id" value
 * @method YocaUser            setMajor()          Sets the current record's "major" value
 * @method YocaUser            setWork()           Sets the current record's "work" value
 * @method YocaUser            setEmployer()       Sets the current record's "employer" value
 * @method YocaUser            setOhPreference()   Sets the current record's "oh_preference" value
 * @method YocaUser            setIndustryId()     Sets the current record's "industry_id" value
 * @method YocaUser            setIndustry()       Sets the current record's "industry" value
 * @method YocaUser            setDescription()    Sets the current record's "description" value
 * @method YocaUser            setExpectationId()  Sets the current record's "expectation_id" value
 * @method YocaUser            setExpectation()    Sets the current record's "expectation" value
 * @method YocaUser            setAge()            Sets the current record's "age" value
 * @method YocaUser            setNeighborhood()   Sets the current record's "neighborhood" value
 * @method YocaUser            setOrganization()   Sets the current record's "organization" value
 * @method YocaUser            setIsActive()       Sets the current record's "is_active" value
 * @method YocaUser            setCreatedAt()      Sets the current record's "created_at" value
 * @method YocaUser            setUpdatedAt()      Sets the current record's "updated_at" value
 * @method YocaUser            setRegistration()   Sets the current record's "Registration" collection
 * 
 * @package    yoca
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseYocaUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('yoca_user');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('type', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'Member',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('firstname', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('lastname', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('english_name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('phone', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('wechat', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('education', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('school_id', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('school', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('major_id', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('major', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('work', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('employer', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('oh_preference', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('industry_id', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('industry', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('description', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('expectation_id', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('expectation', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('age', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('neighborhood', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('organization', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Registration', array(
             'local' => 'id',
             'foreign' => 'mentee_id'));
    }
}